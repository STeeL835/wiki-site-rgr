@using Microsoft.Security.Application
@using WikiSite.PL.ASP.Classes
@using WikiSite.PL.ASP.Models
@model CommentsShowAndAdd

@{
	ViewBag.Title = "Обсуждение статьи " + ViewBag.Article.Heading;
	Layout = "~/Views/Shared/_Layout.cshtml";
	Guid CurrentUserId = Guid.Empty;
	if (Request.IsAuthenticated)
	{
		CurrentUserId = Guid.Parse(User.Identity.Name);
	}
	ArticleVM Article = (ArticleVM) ViewBag.Article;
	ArticleVM lastEdit = Article;
	var editNumber = 0;
}

@section style
{
	<link href="~/Scripts/Editor.md/css/editormd.css" rel="stylesheet" />
}

@section js
{
	<script src="~/Scripts/jquery.validate.min.js"></script>
	<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
	<script src="~/Scripts/foolproof/mvcfoolproof.unobtrusive.min.js"></script>

	@if (!Request.Browser.IsMobileDevice)
	{
		<script src="~/Scripts/Editor.md/editormd.js"></script>
		<script>
			var aboutEditor;

			// Useless on small monitors
			if (!IsMobile) {
				$(function() {
				    aboutEditor = editormd({
				        id: "comment-editor",
				        toolbarIcons: "simple",
				        width: "100%",
				        height: 300,
				        toc: false,
				        path: "/Scripts/Editor.md/lib/",
				        pluginPath: "/Scripts/Editor.md/plugins/",
				        emoji: true,
						imageUpload: false,
						placeholder: "ящетаю+"
					});
				});
			}

		</script>
		<script src="~/Scripts/Editor.md/languages/ru-ru.js"></script>
	}
}

@section actions {
	<li>@Html.ActionLink("К статье", "Show", "Article", new { url = Article.ShortUrl }, null)</li>
	<li>@Html.ActionLink("Все правки статьи", "Show", "Article", new { url = Article.ShortUrl }, null)</li>
}

<h1 class="page-header">
	<a href="@Url.Action("Show", "Article", new { url = Article.ShortUrl})" title="К статье" data-toggle="tooltip" data-placement="left" class="btn btn-link page-back-button hidden-xs"><i class="fa fa-angle-left"></i></a>
	Обсуждение статьи <span class="text-primary">@Article.Heading</span>
</h1>

<div class="row">
	<div class="col-xs-12">
		@foreach (CommentArticleVersionModel item in Model.AllCommentElements)
		{
			if (item.CommentOrVersion == CommentArticleVersionModel.CVType.Comment)
			{
				var comment = item.Comment;
				var user = UserVM.GetUser(comment.AuthorId);
				<div class="comment list-group-item">
					<div class="row">
						@if (Request.IsAuthenticated && (CurrentUserId == comment.AuthorId || User.IsInRole("admin") || User.IsInRole("moderator")))
						{
							<div class="comment-actions">
								<a href="@Url.Action("Edit", new {id = comment.Id})" title="Редактировать" data-toggle="tooltip" data-placement="top" class="btn btn-sm btn-inverse">
									<i class="fa fa-pencil"></i>
								</a>
								<a href="#!" tabindex="0" role="button" data-trigger="focus" data-toggle="confirm-popover" data-placement="left" class="btn btn-sm btn-danger">
									<i class="fa fa-trash"></i>
								</a>
								<output hidden>
									<a href="@Url.Action("Delete", new {id = comment.Id})" class="btn btn-danger btn-sm">Удалить бесповоротно</a>
								</output>
							</div>
						}
						<div class="comment-author col-xs-12 col-sm-3 col-lg-2">
							<a href="@Url.Action("Details", "User", new {id = user.ShortId})">
								<img src="https://www.gravatar.com/avatar/@UserCredentialsVM.GetEmailHash(comment.AuthorId)?s=80&d=retro" alt="Изображение профиля">
							</a>
							<div class="comment-author-info">
								<h4 class="comment-nickname"><a href="@Url.Action("Details", "User", new {id = user.ShortId})">@user.Nickname</a></h4>
								<div>
									@if (RoleVM.UserIsInRole("admin", user.Id))
									{
										<span class="label label-warning">Админ</span>
									}
									@if (RoleVM.UserIsInRole("moderator", user.Id))
									{
										<span class="label label-success">Модератор</span>
									}
									@if (user.Id == lastEdit.EditionAuthorId)
									{
										<span class="label label-inverse">Автор правки</span>
									}
									@if (user.Id == Article.AuthorId)
									{
										<span class="label label-primary">Автор статьи</span>
									}
								</div>
								<em class="comment-date">@comment.DateOfCreation</em>
							</div>
						</div>
						<div class="col-xs-12 col-sm-9 col-lg-10">
							@Html.Markdown(comment.Text)
						</div>
					</div>
				</div>
			}
			else if (item.CommentOrVersion == CommentArticleVersionModel.CVType.ArticleVersion)
			{
				var version = lastEdit = item.ArticleVersion;
				editNumber++;
				var editMessage = editNumber == 1 ? "Изначальная версия" : "Версия " + editNumber;
				<a href="@Url.Action("Show", "Article", new {url = Article.ShortUrl, number = editNumber})" class="newversion">
					<span class="newversion-user">@UserVM.GetUser(version.EditionAuthorId).Nickname</span>
					<span>@editMessage</span>
					<span class="newversion-date">@version.LastEditDate.ToString("dd.MM.yy hh:mm")</span>
				</a>
			}
		}
	</div>
</div>

@if (Request.IsAuthenticated)
{
	<div class="row">
		<div class="col-xs-12">
			<h3>Оставить свой комментарий</h3>
		</div>
		@using (Html.BeginForm("Add", "Comments", FormMethod.Post))
		{
			@Html.AntiForgeryToken()

			@Html.Hidden("ArticleId", Article.Id)
			<div class="col-xs-12">
				<div class="form-group">

					<div id="comment-editor" class="editor">
						@Html.EditorFor(model => model.Text, new {htmlAttributes = new {@class = "form-control input-notice-input"}})
						<div class="input-notice visible-xs visible-sm">
							<svg class="markdown-icon" aria-hidden="true" version="1.1" width="18" height="16" viewBox="0 0 16 14" style=""><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg>
							<span>Поддерживается Markdown</span>
						</div>
						<noscript class="hidden-xs hidden-sm">
							<div class="input-notice">
								<svg class="markdown-icon" aria-hidden="true" version="1.1" width="18" height="16" viewBox="0 0 16 14" style=""><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg>
								<span>Поддерживается Markdown</span>
							</div>
						</noscript>
					</div>
				</div>
			</div>
			<div class="col-xs-12">
				@Html.ValidationMessageFor(model => model.Text, "", new {@class = "text-danger"})
			</div>
			<div class="col-xs-12">
				<input type="submit" value="Оставить комментарий" class="btn btn-primary"/>
			</div>
		}
	</div>
}
